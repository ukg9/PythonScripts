from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
import seaborn as sns
import matplotlib.pyplot as plt

# Load your dataset
df = pd.read_csv('your_dataset.csv')

# Features to use for clustering and PCA
features = ['NumberOfTrades_D&B', 'TIBYear_D&B', 'TotalUCCs_D&B', 'TotalEmployees_D&B', 'CurrentPadex_D&B']

# Scale the data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(df[features])

# 1. K-Means Clustering
kmeans = KMeans(n_clusters=3, random_state=42)
df['Cluster'] = kmeans.fit_predict(X_scaled)

# Visualize clusters
plt.figure(figsize=(8, 6))
sns.scatterplot(x='NumberOfTrades_D&B', y='TotalEmployees_D&B', hue='Cluster', data=df, palette='viridis')
plt.title("K-Means Clustering of Bureau Variables")
plt.show()

# 2. PCA for Dimensionality Reduction
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

# Create a DataFrame with the principal components
df_pca = pd.DataFrame(X_pca, columns=['PCA1', 'PCA2'])
df_pca['Cluster'] = df['Cluster']

# Visualize PCA results
plt.figure(figsize=(8, 6))
sns.scatterplot(x='PCA1', y='PCA2', hue='Cluster', data=df_pca, palette='viridis')
plt.title("PCA Plot with Clusters")
plt.show()
