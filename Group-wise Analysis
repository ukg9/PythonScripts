import pandas as pd

# Sample data for demonstration; replace this with your actual dataset
# df = pd.read_csv('your_dataset.csv')  # Load your dataset

data = {
    'TIBYear': [2018, 2021, 2005, 2015, 1997, 2020, 2012, 2011, 2003, 1990],
    'DNBScore': [150, 220, 130, 190, 175, 250, 175, 160, 180, 120],
    'maxdelqstat': [1, 35, 3, 0, 62, 91, 45, 15, 25, 0],
    'NumberOfTrades': [5, 2, 3, 8, 1, 7, 4, 0, 6, 9],
    'NumberOfEmployees': [10, 20, 5, 15, 2, 8, 6, 12, 3, 30]
}

df = pd.DataFrame(data)

# Function to categorize maxdelqstat
def categorize_delqstat(x):
    if x == 0:
        return 'No delinquency'
    elif 1 <= x <= 30:
        return 'Minor delinquency'
    elif 31 <= x <= 60:
        return 'Moderate delinquency'
    elif 61 <= x <= 90:
        return 'Severe delinquency'
    else:
        return 'Critical delinquency'

# Add a delinquency category column
df['delinquency_category'] = df['maxdelqstat'].apply(categorize_delqstat)

# Create bins and labels for DNBScore
dnb_bins = [100, 150, 200, 250, 300]
dnb_labels = ['(100-149)', '(150-199)', '(200-249)', '(250-300)']
df['DNBScore_group'] = pd.cut(df['DNBScore'], bins=dnb_bins, labels=dnb_labels)

# Create bins and labels for TIBYear
tib_bins = [1990, 2000, 2010, 2015, 2020, 2023]
tib_labels = ['1999 and earlier', '2000-2009', '2010-2014', '2015-2019', '2020-2023']
df['TIBYear_group'] = pd.cut(df['TIBYear'], bins=tib_bins, labels=tib_labels)

# Create bins and labels for NumberOfTrades
trades_bins = [0, 1, 3, 5, 10]
trades_labels = ['0', '1-3', '4-5', '6 or more']
df['NumberOfTrades_group'] = pd.cut(df['NumberOfTrades'], bins=trades_bins, labels=trades_labels)

# Create bins and labels for NumberOfEmployees
employees_bins = [0, 1, 5, 10, 20, 30]
employees_labels = ['0', '1-5', '6-10', '11-20', '21 or more']
df['NumberOfEmployees_group'] = pd.cut(df['NumberOfEmployees'], bins=employees_bins, labels=employees_labels)

# Create a new DataFrame to store results
results = df.groupby('delinquency_category').agg({
    'TIBYear_group': list,
    'DNBScore_group': list,
    'NumberOfTrades_group': list,
    'NumberOfEmployees_group': list
}).reset_index()

# Rename columns for clarity
results.columns = ['Delinquency Category', 'TIBYear Groups', 'DNBScore Groups', 'Number of Trades Groups', 'Number of Employees Groups']

# Display the results
print(results)
